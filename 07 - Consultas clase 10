-- 01. Función control de stock

DELIMITER //
CREATE FUNCTION control_stock (id INT) RETURNS INT
DETERMINISTIC
BEGIN
	DECLARE resultado INT;
    
    IF id >0 THEN
		-- Aquí se usa SELECT ... INTO para asignar el valor a 'resultado'
		SELECT stock INTO resultado FROM libros WHERE id_libro = id;
	else
		SET resultado = 'id incorrecto';
        
	END IF;
    RETURN resultado;

END //
DELIMITER ;

-- 02. Función cambiar nombre

DELIMITER //
CREATE FUNCTION actualizar_nombre(dato INT, nombre VARCHAR(60)) RETURNS VARCHAR(60)
DETERMINISTIC
BEGIN
    DECLARE resultado INT;
    
    UPDATE libros SET titulo = nombre WHERE id_libro = dato;
    SET resultado = nombre;
    RETURN resultado; 
END//
DELIMITER ;

-- 03. Función facturado mes

DELIMITER //
CREATE FUNCTION facturado_mes(dato INT) RETURNS FLOAT
DETERMINISTIC
BEGIN
    DECLARE resultado FLOAT;
    SELECT SUM(ingreso) INTO resultado FROM caja WHERE MONTH(fecha) = dato;
    RETURN resultado;
   

END//
DELIMITER ;

SET SQL_SAFE_UPDATES = 0;

DELIMITER //
CREATE FUNCTION actualizar_precio(dato INT) RETURNS VARCHAR(60)
DETERMINISTIC
BEGIN
    DECLARE porcentaje FLOAT;
    DECLARE resultado VARCHAR(60);
    SET porcentaje = 1 + dato/100;
    UPDATE libros SET precio = precio*porcentaje;
    
    SET resultado='Realizado';
    RETURN resultado;
   

END//
DELIMITER ;

-- 05. Actualizar precio

DELIMITER //
CREATE FUNCTION actualizar_precio(dato INT) RETURNS VARCHAR(60)
DETERMINISTIC
BEGIN
    DECLARE porcentaje FLOAT;
    DECLARE resultado VARCHAR(60);
    SET porcentaje = 1 + dato/100;
    UPDATE libros SET precio = precio*porcentaje;
    
    SET resultado='Realizado';
    RETURN resultado;
   

END//
DELIMITER ;

-- 06. Procedimiento actualizar stock

DELIMITER //
CREATE PROCEDURE actualizar_stock(id INT, cantidad INT)
DETERMINISTIC
BEGIN
	DECLARE monto INT;
    DECLARE precio INT;
    SELECT precio_compra INTO precio FROM libros WHERE id_libro = id;
    SET monto = -cantidad * precio;
    
    UPDATE libros SET stock = stock + cantidad WHERE id_libro = id;
    
    INSERT INTO caja (ingreso, fecha) VALUES(monto,CURDATE());

END//
DELIMITER ;

-- 07. Procedimiento venta libro

DELIMITER //
CREATE PROCEDURE venta_libro(id INT, cantidad INT)
DETERMINISTIC
BEGIN
	DECLARE monto INT;
    DECLARE precio INT;
    SELECT precio_venta INTO precio FROM libros WHERE id_libro = id;
    SET monto = cantidad * precio;
    
    UPDATE libros SET stock = stock - cantidad WHERE id_libro = id;
    
    INSERT INTO caja (ingreso, fecha) VALUES(monto,CURDATE());

END//
DELIMITER ;

-- 08. Procedimiento baja libro

DELIMITER //
CREATE PROCEDURE baja_libro(id INT)
DETERMINISTIC
BEGIN
	DELETE FROM libros WHERE id_libro =id;

END//
DELIMITER ;



